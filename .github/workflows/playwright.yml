name: Playwright Tests

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    env:
      NEXT_PUBLIC_BACKEND_API_URL: ${{ secrets.NEXT_PUBLIC_BACKEND_API_URL }}
      NEXT_PUBLIC_CONSUMER_ID: ${{ secrets.NEXT_PUBLIC_CONSUMER_ID }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-pw-deps-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-pw-deps-

      - name: Install dependencies (if no cache)
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci

      - name: Cache Playwright Browsers
        id: cache-pw-browsers
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-pw-browsers-${{ hashFiles('package-lock.json', 'playwright.config.ts') }}
          restore-keys: |
            ${{ runner.os }}-pw-browsers-

      - name: Install Playwright Browsers (if no cache)
        if: steps.cache-pw-browsers.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps

      - name: Cache Next.js build cache
        uses: actions/cache@v3
        with:
          path: .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('package-lock.json', 'next.config.js') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-

      - name: Build Next.js app
        run: npm run build

      - name: Start Next.js production server
        run: |
          npm run start &  # serve built app
          npx wait-on http://localhost:3000

      - name: Run Playwright tests
        run: npx playwright test --project=chromium
